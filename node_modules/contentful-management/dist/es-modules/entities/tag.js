import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import copy from 'fast-copy';
import { wrapCollection } from '../common-utils';
import enhanceWithMethods from '../enhance-with-methods';
import * as endpoints from '../plain/endpoints';
export default function createTagApi(http) {
  var getParams = function getParams(tag) {
    return {
      spaceId: tag.sys.space.sys.id,
      environmentId: tag.sys.environment.sys.id,
      tagId: tag.sys.id
    };
  };

  return {
    update: function update() {
      var raw = this.toPlainObject();
      return endpoints.tag.update(http, getParams(raw), raw).then(function (data) {
        return wrapTag(http, data);
      });
    },
    "delete": function _delete() {
      var raw = this.toPlainObject();
      return endpoints.tag.del(http, getParams(raw), raw.sys.version).then(function () {// noop
      });
    }
  };
}
export function wrapTag(http, data) {
  var tag = toPlainObject(copy(data));
  var tagWithMethods = enhanceWithMethods(tag, createTagApi(http));
  return freezeSys(tagWithMethods);
}
export var wrapTagCollection = wrapCollection(wrapTag);