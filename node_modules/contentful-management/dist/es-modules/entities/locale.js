import copy from 'fast-copy';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { wrapCollection } from '../common-utils';
import * as endpoints from '../plain/endpoints';

function createLocaleApi(http) {
  var getParams = function getParams(locale) {
    return {
      spaceId: locale.sys.space.sys.id,
      environmentId: locale.sys.environment.sys.id,
      localeId: locale.sys.id
    };
  };

  return {
    update: function update() {
      var raw = this.toPlainObject();
      return endpoints.locale.update(http, getParams(raw), raw).then(function (data) {
        return wrapLocale(http, data);
      });
    },
    "delete": function _delete() {
      var raw = this.toPlainObject();
      return endpoints.locale.del(http, getParams(raw)).then(function () {// noop
      });
    }
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw locale data
 * @return Wrapped locale data
 */


export function wrapLocale(http, data) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-ignore
  // @ts-ignore
  delete data.internal_code;
  var locale = toPlainObject(copy(data));
  var localeWithMethods = enhanceWithMethods(locale, createLocaleApi(http));
  return freezeSys(localeWithMethods);
}
/**
 * @private
 */

export var wrapLocaleCollection = wrapCollection(wrapLocale);