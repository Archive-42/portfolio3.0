import copy from 'fast-copy';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { wrapCollection } from '../common-utils';
import * as endpoints from '../plain/endpoints';

function createApiKeyApi(http) {
  var getParams = function getParams(data) {
    var _data$sys$space$sys$i, _data$sys$space;

    return {
      spaceId: (_data$sys$space$sys$i = (_data$sys$space = data.sys.space) === null || _data$sys$space === void 0 ? void 0 : _data$sys$space.sys.id) !== null && _data$sys$space$sys$i !== void 0 ? _data$sys$space$sys$i : '',
      apiKeyId: data.sys.id
    };
  };

  return {
    update: function update() {
      var self = this;
      return endpoints.apiKey.update(http, getParams(self), self).then(function (data) {
        return wrapApiKey(http, data);
      });
    },
    "delete": function del() {
      var self = this;
      return endpoints.apiKey.del(http, getParams(self));
    }
  };
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw api key data
 */


export function wrapApiKey(http, data) {
  var apiKey = toPlainObject(copy(data));
  var apiKeyWithMethods = enhanceWithMethods(apiKey, createApiKeyApi(http));
  return freezeSys(apiKeyWithMethods);
}
/**
 * @private
 * @param http - HTTP client instance
 * @param data - Raw api key collection data
 * @return Wrapped api key collection data
 */

export var wrapApiKeyCollection = wrapCollection(wrapApiKey);