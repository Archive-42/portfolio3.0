import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import copy from 'fast-copy';
import { wrapCollection } from '../common-utils';
import enhanceWithMethods from '../enhance-with-methods';
import * as endpoints from '../plain/endpoints';
/**
 * Represents that state of the scheduled action
 */

var ScheduledActionStatus;

(function (ScheduledActionStatus) {
  ScheduledActionStatus["scheduled"] = "scheduled";
  ScheduledActionStatus["inProgress"] = "inProgress";
  ScheduledActionStatus["succeeded"] = "succeeded";
  ScheduledActionStatus["failed"] = "failed";
  ScheduledActionStatus["canceled"] = "canceled";
})(ScheduledActionStatus || (ScheduledActionStatus = {}));

export function createDeleteScheduledAction(http) {
  return function () {
    var data = this.toPlainObject();
    return endpoints.scheduledAction.del(http, {
      spaceId: data.sys.space.sys.id,
      scheduledActionId: data.sys.id
    }).then(function (data) {
      return wrapScheduledAction(http, data);
    });
  };
}
export default function createScheduledActionApi(http) {
  return {
    "delete": createDeleteScheduledAction(http)
  };
}
export function wrapScheduledAction(http, data) {
  var scheduledAction = toPlainObject(copy(data));
  var scheduledActionWithMethods = enhanceWithMethods(scheduledAction, createScheduledActionApi(http));
  return freezeSys(scheduledActionWithMethods);
}
export var wrapScheduledActionCollection = wrapCollection(wrapScheduledAction);